generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(cuid())
  email      String      @unique
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  notes      Note[]
  password   Password?
  workspaces Workspace[]
}

model Password {
  hash   String
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Note {
  id        String   @id @default(cuid())
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Todo {
  id          String    @id @default(cuid())
  title       String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  complete    Boolean   @default(false)
  goal        Float     @default(1.0)
  workspaceId String
  timers      Timer[]
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  subtask     Subtask[]
}

model Workspace {
  id     String @id @default(cuid())
  title  String
  userId String
  todos  Todo[]
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Timer {
  id               String   @id @default(cuid())
  startTime        DateTime
  endTime          DateTime
  secondsRemaining Int
  todoId           String
  todo             Todo     @relation(fields: [todoId], references: [id], onDelete: Cascade)
}

model Subtask {
  id        String   @id @default(cuid())
  note      String
  todoId    String
  createdAt DateTime @default(now())
  todo      Todo     @relation(fields: [todoId], references: [id])
}
